name: Build and Test
on: push

permissions:
  actions: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      RUSTFLAGS: "-Cinstrument-coverage"
    strategy:
      matrix:
        os: ["macos-latest", "ubuntu-latest", "windows-latest"]
    steps:
      - name: Install missing linux libs
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update && \
          sudo apt-get install libgtk-3-dev
      - name: Install Coverage Tools
        if: matrix.os == 'macos-latest'
        run: |
          cargo install grcov && rustup component add llvm-tools
      - name: Check out code
        uses: actions/checkout@v4
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Check Format
        run: cargo fmt --all -- --check
      - name: Build the library
        run: cargo build --locked
      - name: Run Tests
        env:
          LLVM_PROFILE_FILE: "tray-wrapper-%p-%m.profraw"
        run: cargo test
      - name: Generate Coverage Report
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p ./target/debug/coverage/ && grcov . -s . --binary-path ./target/debug/ -t lcov --branch --ignore-not-existing --ignore "*/.cargo/*" --ignore "*/.rustup/*" -o ./target/debug/coverage/lcov.info
      - name: Upload coverage reports to Codecov
        if: matrix.os == 'macos-latest'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  trigger-publish:
    needs: ["build"]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: "ubuntu-latest"
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Trigger Release Work |
        run: |
          gh workflow run release_publish.yml
